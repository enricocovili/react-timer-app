{"version":3,"sources":["components/FullTimer.js","components/NavBar.js","App.js","index.js"],"names":["FullTimer","expiryTimestamp","removeTimer","id","isHidden","IdName","substring","lastIndexOf","parseTime","input","getMidNight","time","Date","durationSeconds","getHours","getMinutes","getSeconds","setSeconds","setHours","useTimer","autoStart","onExpire","Swal","close","audio","Audio","loop","play","fire","title","icon","then","pause","playAudio","seconds","minutes","hours","isRunning","resume","restart","useState","inputStorage","localStorage","getItem","JSON","parse","toString","getInputStorage","setInput","useEffect","setItem","stringify","className","IconButton","color","onClick","removeItem","LocalizationProvider","dateAdapter","AdapterDateFns","TimePicker","ampm","ampmInClock","views","inputFormat","mask","label","value","onChange","newValue","renderInput","params","TextField","onKeyDown","event","key","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","SearchIconWrapper","paddingRight","spacing","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","padding","paddingLeft","transition","transitions","create","PrimarySearchAppBar","createTimer","changeInputFilter","inputFilter","setinputFilter","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Box","sx","flexGrow","AppBar","Toolbar","target","placeholder","inputProps","style","App","a","inputValidator","result","setTimerList","timerList","length","timerStorage","getStorage","InputFilter","setInputFilter","map","timer","filter","t","includes","toLocaleLowerCase","reactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.a309d076.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useTimer } from \"react-timer-hook\";\nimport Swal from \"sweetalert2\";\nimport { TextField } from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport ReplayIcon from \"@material-ui/icons/Replay\";\nimport AdapterDateFns from \"@material-ui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@material-ui/lab/LocalizationProvider\";\nimport TimePicker from \"@material-ui/lab/TimePicker\";\n\nimport \"../index.css\";\n\nexport default function FullTimer({\n  expiryTimestamp,\n  removeTimer,\n  id,\n  isHidden,\n}) {\n  const IdName = id.substring(0, id.lastIndexOf(\" \"));\n\n  function playAudio() {\n    Swal.close();\n    let audio = new Audio(\"alarm.wav\");\n    audio.loop = true;\n    audio.play();\n    Swal.fire({ title: `${IdName}'s off`, icon: \"warning\" }).then(() => {\n      audio.loop = false;\n      audio.pause();\n    });\n  }\n\n  function parseTime(input) {\n    if (!input || input === null) return getMidNight();\n    let time = new Date();\n    let durationSeconds =\n      input.getHours() * 60 ** 2 + input.getMinutes() * 60 + input.getSeconds();\n    // if the timer is set to 00:00:00\n    if (!durationSeconds) return null;\n    time.setSeconds(time.getSeconds() + durationSeconds);\n    return time;\n  }\n\n  function getMidNight() {\n    // workaround to get 00:00:00 at timer's creation\n    const time = new Date();\n    time.setHours(0, 0, 0, 0);\n    return time;\n  }\n\n  function getInputStorage() {\n    let inputStorage = localStorage.getItem(`input ${id}`);\n    if (inputStorage === \"null\" || !inputStorage) {\n      return getMidNight();\n    }\n    return new Date(JSON.parse(inputStorage.toString()));\n  }\n\n  const { seconds, minutes, hours, isRunning, pause, resume, restart } =\n    useTimer({\n      autoStart: false,\n      expiryTimestamp,\n      onExpire: () => {\n        playAudio();\n      },\n    });\n\n  const [input, setInput] = useState(getInputStorage());\n\n  useEffect(() => {\n    localStorage.setItem(`input ${id}`, JSON.stringify(input));\n    let time = parseTime(input);\n    restart(time);\n    pause();\n    // eslint-disable-next-line\n  }, [input]);\n\n  if (isHidden) return <></>;\n\n  return (\n    <section className=\"wrapper\">\n      <div className=\"title-bar\">\n        <h2>{IdName}</h2>\n        <IconButton\n          // style={{ color: \"white\" }}\n          aria-label=\"delete\"\n          color=\"default\"\n          onClick={() => {\n            localStorage.removeItem(`input ${id}`);\n            removeTimer();\n          }}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </div>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <TimePicker\n          ampm={false}\n          ampmInClock={false}\n          views={[\"hours\", \"minutes\", \"seconds\"]}\n          inputFormat=\"HH:mm:ss\"\n          mask=\"__:__:__\"\n          label=\"INSERT TIME HERE\"\n          value={input}\n          onChange={(newValue) => {\n            setInput(newValue);\n          }}\n          renderInput={(params) => (\n            <TextField\n              // style={{ color: \"white\" }}\n              onKeyDown={(event) => {\n                if (event.key === \"Enter\") {\n                  let time = parseTime(input);\n                  restart(time);\n                }\n              }}\n              {...params}\n            />\n          )}\n        />\n      </LocalizationProvider>\n      <div className=\"clock buttons\">\n        <div className=\"clock\">\n          <div className=\"actual-timer\">\n            <div className=\"hours\">{hours}</div>:\n            <div className=\"minutes\">{minutes}</div>:\n            <div className=\"seconds\">{seconds}</div>\n          </div>\n        </div>\n        <div className=\"buttons\">\n          <IconButton\n            // style={{ color: \"white\" }}\n            onClick={() => {\n              if (!isRunning) {\n                if (!(hours || minutes || seconds)) {\n                  let time = parseTime(input);\n                  if (!time) return;\n                  restart(time);\n                } else {\n                  resume();\n                }\n              } else {\n                pause();\n              }\n            }}\n          >\n            {!isRunning ? <PlayArrowIcon /> : <PauseIcon />}\n          </IconButton>\n          <IconButton\n            // style={{ color: \"white\" }}\n            onClick={() => {\n              let time = parseTime(input);\n              restart(time);\n              pause();\n            }}\n          >\n            <ReplayIcon />\n          </IconButton>\n        </div>\n      </div>\n      <hr />\n    </section>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { styled, alpha } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Menu from \"@material-ui/core/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { IconButton } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.0),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.0),\n  },\n  marginLeft: 0,\n  width: \"100%\",\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  paddingRight: theme.spacing(1),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  width: \"100%\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n  },\n}));\n\nexport default function PrimarySearchAppBar({\n  createTimer,\n  changeInputFilter,\n}) {\n  const [inputFilter, setinputFilter] = useState(\"\");\n\n  useEffect(() => {\n    changeInputFilter(inputFilter);\n    // eslint-disable-next-line\n  }, [inputFilter]);\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\",\n      }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\",\n      }}\n    ></Menu>\n  );\n\n  return (\n    <Box sx={{ flexGrow: 1, width: \"max(400px, 70vw)\" }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              onChange={(event) => setinputFilter(event.target.value)}\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n              onKeyDown={(event) => {\n                if (event.key === \"Escape\") {\n                  event.target.value = \"\";\n                  setinputFilter(\"\");\n                }\n              }}\n            />\n          </Search>\n          <Box sx={{ flexGrow: 1 }} />\n          <div>\n            <IconButton\n              onClick={() => {\n                createTimer();\n              }}\n            >\n              <AddIcon style={{ color: \"white\" }} />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMenu}\n    </Box>\n  );\n}\n","import FullTimer from \"./components/FullTimer\";\nimport NavBar from \"./components/NavBar\";\nimport React, { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport \"./index.css\";\n\nexport default function App() {\n  function getStorage() {\n    let timerStorage = localStorage.getItem(\"timerList\");\n    if (!timerStorage || timerStorage === []) return [];\n    return JSON.parse(timerStorage.toString());\n  }\n\n  async function createTimer() {\n    await Swal.fire({\n      title: \"Enter timer's name\",\n      input: \"text\",\n      inputValidator: (value) => {\n        if (!value) return \"You need to write something!\";\n      },\n    }).then((result) => {\n      if (!result.value) return;\n      const time = new Date();\n      time.setSeconds(time.getSeconds() + 0);\n      setTimerList((timerList) => [\n        ...timerList,\n        {\n          id: `${result.value} ${timerList.length}`,\n          expiryTimestamp: time,\n        },\n      ]);\n    });\n  }\n\n  const [timerList, setTimerList] = useState(getStorage());\n  const [InputFilter, setInputFilter] = useState(\"\");\n\n  function removeTimer(timer) {\n    setTimerList((timerList) => timerList.filter((t) => t.id !== timer.id));\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"timerList\", JSON.stringify(timerList));\n  }, [timerList]);\n\n  return (\n    <div id=\"main\">\n      <NavBar\n        createTimer={() => createTimer()}\n        changeInputFilter={(event) => setInputFilter(event)}\n      />\n      {timerList.map((timer) => (\n        <FullTimer\n          key={timer.id}\n          id={timer.id}\n          expiryTimestamp={timer.expiryTimestamp}\n          removeTimer={() => removeTimer(timer)}\n          isHidden={\n            !timer.id\n              .substring(0, timer.id.lastIndexOf(\" \")) // id without index\n              .includes(InputFilter.toLocaleLowerCase())\n          }\n        />\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport reactDom from \"react-dom\";\nimport App from \"./App\";\n\nreactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}