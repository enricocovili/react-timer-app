{"version":3,"sources":["media/Leapfrog.ogg","components/utils.js","components/SingleTimer/TitleBar.js","components/SingleTimer/TimeButtons.js","components/SingleTimer/FullTimer.js","components/SearchBar/SortButton.js","components/SearchBar/AddTimerBtn.js","components/SearchBar/SearchBar.js","App.js","index.js"],"names":["getIdName","id","substring","lastIndexOf","parseTime","input","onlySeconds","getMidNight","time","Date","durationSeconds","getHours","getMinutes","getSeconds","setSeconds","setHours","TitleBar","props","removeTimer","className","IconButton","color","onClick","localStorage","removeItem","TimeButtons","pause","resume","restart","isRunning","clockValues","every","e","Boolean","utils","FullTimer","expiryTimestamp","updateTimeoutSeconds","isHidden","useTimer","autoStart","onExpire","Swal","close","audio","Audio","audioURL","loop","play","fire","title","icon","then","seconds","minutes","hours","useState","inputStorage","getItem","JSON","parse","toString","setInput","useEffect","setItem","stringify","TimerBody","map","item","index","length","LocalizationProvider","dateAdapter","AdapterDateFns","TimePicker","ampm","ampmInClock","views","inputFormat","mask","label","value","onChange","newValue","renderInput","params","TextField","onKeyDown","event","key","SortButton","sortList","anchorEl","setAnchorEl","open","handleClose","sortMethod","currentTarget","style","cursor","paddingRight","Menu","onClose","MenuListProps","MenuItem","AddTimerBtn","createTimer","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","SearchIconWrapper","spacing","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","padding","paddingLeft","transition","transitions","create","SearchBar","changeInputFilter","inputFilter","setinputFilter","Box","sx","flexGrow","AppBar","Toolbar","target","placeholder","inputProps","App","timerStorage","getStorage","timerList","setTimerList","InputFilter","setInputFilter","a","inputValidator","result","timeoutSeconds","sorted","sort","b","localeCompare","sortTimerList","timer","toLocaleLowerCase","includes","filter","t","newList","timerIndex","findIndex","obj","timeChange","reactDom","render","document","getElementById"],"mappings":"+QAAe,MAA0B,qC,iBCGlC,SAASA,EAAUC,GACxB,OAAOA,EAAGC,UAAU,EAAGD,EAAGE,YAAY,MAmBjC,SAASC,EAAUC,EAAOC,GAC/B,IAAKD,GAAmB,OAAVA,EAAgB,OAAOE,IACrC,IAAIC,EAAO,IAAIC,KACXC,EACFL,EAAMM,WAAN,SAAmB,GAAM,GAAyB,GAArBN,EAAMO,aAAoBP,EAAMQ,aAC/D,OAAIP,EAAoBI,EAEnBA,GACLF,EAAKM,WAAWN,EAAKK,aAAeH,GAC7BF,GAFsB,KAK/B,SAASD,IAEP,IAAMC,EAAO,IAAIC,KAEjB,OADAD,EAAKO,SAAS,EAAG,EAAG,EAAG,GAChBP,E,WCnCM,SAASQ,EAASC,GAC/B,IAAQhB,EAAoBgB,EAApBhB,GAAIiB,EAAgBD,EAAhBC,YACZ,OACE,sBAAKC,UAAU,YAAf,UACE,6BAAKnB,EAAUC,KACf,cAACmB,EAAA,EAAD,CAEE,aAAW,SACXC,MAAM,UACNC,QAAS,WACPC,aAAaC,WAAb,gBAAiCvB,IACjCiB,KANJ,SASE,cAAC,IAAD,S,0DCZO,SAASO,EAAYR,GAClC,IAAQS,EAA0DT,EAA1DS,MAAOC,EAAmDV,EAAnDU,OAAQC,EAA2CX,EAA3CW,QAASC,EAAkCZ,EAAlCY,UAAWC,EAAuBb,EAAvBa,YAAazB,EAAUY,EAAVZ,MACxD,OACE,sBAAKc,UAAU,UAAf,UACE,cAACC,EAAA,EAAD,CAEEE,QAAS,WACP,GAAKO,IASHH,SARA,GAAKI,IAAcC,OAAM,SAACC,GAAD,OAAOC,QAAQD,MAKtCL,QAL2C,CAC3C,IAAInB,EAAO0B,EAAgB7B,KAC3B,IAAKG,EAAM,OACXoB,EAAQpB,KAPhB,SAgBIqB,IAAkC,cAAC,IAAD,IAApB,cAAC,IAAD,MAElB,cAACT,EAAA,EAAD,CAEEE,QAAS,WACP,IAAId,EAAO0B,EAAgB7B,KAC3BuB,EAAQpB,GACRkB,KALJ,SAQE,cAAC,IAAD,S,MCzBO,SAASS,EAAUlB,GAChC,IAAMmB,EACJnB,EADImB,gBAAiBC,EACrBpB,EADqBoB,qBAAsBnB,EAC3CD,EAD2CC,YAAajB,EACxDgB,EADwDhB,GAAIqC,EAC5DrB,EAD4DqB,SAG9D,EACEC,mBAAS,CACPC,WAAW,EACXJ,kBACAK,SAAU,WACR,IAAIjC,EAAO0B,EAAgB7B,GAC3BuB,EAAQpB,GACRkB,IHfD,SAAmBzB,GACxByC,IAAKC,QACL,IAAIC,EAAQ,IAAIC,MAAMC,GACtBF,EAAMG,MAAO,EACbH,EAAMI,OACNN,IAAKO,KAAK,CAAEC,MAAM,GAAD,OAAKlD,EAAUC,GAAf,UAA4BkD,KAAM,YAAaC,MAAK,WACnER,EAAMG,MAAO,EACbH,EAAMlB,WGSFQ,CAAgBjC,MARdoD,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,MAAO1B,EAAjC,EAAiCA,UAAWH,EAA5C,EAA4CA,MAAOC,EAAnD,EAAmDA,OAAQC,EAA3D,EAA2DA,QAYrDE,EAAc,CAACyB,EAAOD,EAASD,GAErC,EAA0BG,mBHarB,SAAyBvD,GAC9B,IAAIwD,EAAelC,aAAamC,QAAb,gBAA8BzD,IACjD,MAAqB,SAAjBwD,GAA4BA,EAGzB,IAAIhD,KAAKkD,KAAKC,MAAMH,EAAaI,aAF/BtD,IGhB0B2B,CAAsBjC,IAAzD,mBAAOI,EAAP,KAAcyD,EAAd,KAWA,GATAC,qBAAU,WACRxC,aAAayC,QAAb,gBAA8B/D,GAAM0D,KAAKM,UAAU5D,IACnDgC,EAAqBH,EAAgB7B,GAAO,IAC5C,IAAIG,EAAO0B,EAAgB7B,GAC3BuB,EAAQpB,GACRkB,MAEC,CAACrB,IAEAiC,EAAU,OAAO,6BAErB,SAAS4B,IACP,OACE,sBAAK/C,UAAU,gBAAf,UACE,qBAAKA,UAAU,eAAf,SACGW,EAAYqC,KAAI,SAACC,EAAMC,GAAP,OACf,qCACE,8BAAMD,EAAO,GAAP,WAAgBA,GAASA,IAC9BC,IAAUvC,EAAYwC,OAAS,EAAI,GAAK,YAI/C,cAAC7C,EAAD,CACEC,MAAO,kBAAMA,KACbC,OAAQ,kBAAMA,KACdC,QAAS,SAACpB,GAAD,OAAUoB,EAAQpB,IAC3BqB,UAAW,kBAAMA,GACjBC,YAAa,kBAAMA,GACnBzB,MAAO,kBAAMA,QAMrB,OACE,0BAASc,UAAU,UAAnB,UACE,cAACH,EAAD,CAAUf,GAAIA,EAAIiB,YAAaA,IAC/B,cAACqD,EAAA,EAAD,CAAsBC,YAAaC,IAAnC,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,EACNC,aAAa,EACbC,MAAO,CAAC,QAAS,UAAW,WAC5BC,YAAY,WACZC,KAAK,WACLC,MAAM,mBACNC,MAAO5E,EACP6E,SAAU,SAACC,GACTrB,EAASqB,IAEXC,YAAa,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,aAEEC,UAAW,SAACC,GACV,GAAkB,UAAdA,EAAMC,IAAiB,CACzB,IAAIjF,EAAO0B,EAAgB7B,GAC3BuB,EAAQpB,MAGR6E,SAKZ,cAACnB,EAAD,IACA,0B,6GCxCSwB,MAjDf,SAAoBzE,GAClB,IAAQ0E,EAAa1E,EAAb0E,SAER,EAAgCnC,mBAAS,MAAzC,mBAAOoC,EAAP,KAAiBC,EAAjB,KAEMC,EAAO7D,QAAQ2D,GAMfG,EAAc,SAACC,GACnBH,EAAY,MACc,kBAAfG,GAAyBL,EAASK,IAG/C,OACE,qCACE,cAAC5E,EAAA,EAAD,CAAYE,QAXI,SAACkE,GACnBK,EAAYL,EAAMS,gBAUhB,SACE,cAAC,IAAD,CACEC,MAAO,CACL7E,MAAO,QACP8E,OAAQ,UACRC,aAAc,YAIpB,eAACC,EAAA,EAAD,CACEpG,GAAG,aACH2F,SAAUA,EACVE,KAAMA,EACNQ,QAASP,EACTQ,cAAe,CACb,kBAAmB,gBANvB,UASE,cAACC,EAAA,EAAD,CAAUlF,QAAS,kBAAMyE,EAAY,QAArC,iBACA,cAACS,EAAA,EAAD,CAAUlF,QAAS,kBAAMyE,EAAY,QAArC,iBACA,cAACS,EAAA,EAAD,CAAUlF,QAAS,kBAAMyE,EAAY,YAArC,8BAGA,cAACS,EAAA,EAAD,CAAUlF,QAAS,kBAAMyE,EAAY,cAArC,qC,kBC5CO,SAASU,EAAYxF,GAClC,IAAQyF,EAAgBzF,EAAhByF,YACR,OACE,mCACE,cAACtF,EAAA,EAAD,CACEE,QAAS,WACPoF,KAFJ,SAKE,cAAC,IAAD,CAASR,MAAO,CAAE7E,MAAO,eCFjC,IAAMsF,EAASC,YAAO,MAAPA,EAAc,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CAC3CC,SAAU,WACVC,aAAcF,EAAMG,MAAMD,aAC1BE,gBAAiBC,YAAML,EAAMM,QAAQC,OAAOC,MAAO,GACnDC,WAAY,EACZC,MAAO,WAGHC,EAAoBZ,YAAO,MAAPA,EAAc,kBAAgB,CACtDR,aADsC,EAAGS,MACrBY,QAAQ,GAC5BC,OAAQ,OACRZ,SAAU,WACVa,cAAe,OACfC,QAAS,OACTC,WAAY,SACZC,eAAgB,aAGZC,GAAkBnB,YAAOoB,IAAPpB,EAAkB,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CACxDxF,MAAO,UACPkG,MAAO,OACP,wBAAyB,CACvBU,QAASpB,EAAMY,QAAQ,EAAG,EAAG,EAAG,GAEhCS,YAAY,cAAD,OAAgBrB,EAAMY,QAAQ,GAA9B,KACXU,WAAYtB,EAAMuB,YAAYC,OAAO,SACrCd,MAAO,YAII,SAASe,GAAUrH,GAChC,IAAQyF,EAA6CzF,EAA7CyF,YAAa6B,EAAgCtH,EAAhCsH,kBAAmB5C,EAAa1E,EAAb0E,SACxC,EAAsCnC,mBAAS,IAA/C,mBAAOgF,EAAP,KAAoBC,EAApB,KAOA,OALA1E,qBAAU,WACRwE,EAAkBC,KAEjB,CAACA,IAGF,cAACE,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,EAAGrB,MAAO,QAA/B,SACE,cAACsB,EAAA,EAAD,CAAQ/B,SAAS,SAAjB,SACE,eAACgC,EAAA,EAAD,WACE,cAAC,EAAD,CACEnD,SAAU,SAACK,GACTL,EAASK,MAGb,eAAC,EAAD,WACE,cAACwB,EAAD,UACE,cAAC,IAAD,MAEF,cAACO,GAAD,CACE7C,SAAU,SAACM,GAAD,OAAWiD,EAAejD,EAAMuD,OAAO9D,QACjD+D,YAAY,eACZC,WAAY,CAAE,aAAc,UAC5B1D,UAAW,SAACC,GACQ,WAAdA,EAAMC,MACRD,EAAMuD,OAAO9D,MAAQ,GACrBwD,EAAe,WAKvB,cAAChC,EAAD,CAAaC,YAAaA,WClErB,SAASwC,KAStB,MAAkC1F,mBAWlC,WACE,IAAI2F,EAAe5H,aAAamC,QAAQ,aACxC,OAAKyF,GAAgBA,IAAiB,GAC/BxF,KAAKC,MAAMuF,EAAatF,YADkB,GAbRuF,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsC9F,mBAAS,IAA/C,mBAAO+F,EAAP,KAAoBC,EAApB,KAV4B,4CA0B5B,sBAAAC,EAAA,sEACQ/G,IAAKO,KAAK,CACdC,MAAO,qBACP7C,MAAO,OACPqJ,eAAgB,SAACzE,GACf,IAAKA,EAAO,MAAO,kCAEpB7B,MAAK,SAACuG,GACFA,EAAO1E,OACZqE,GAAa,SAACD,GAAD,4BACRA,GADQ,CAEX,CACEO,eAAgB,EAChB3J,GAAG,GAAD,OAAK0J,EAAO1E,MAAZ,YAAqBoE,EAAU/E,QACjClC,gBAAiB,WAdzB,4CA1B4B,sBAgG5B,OAZA2B,qBAAU,WACRxC,aAAayC,QAAQ,YAAaL,KAAKM,UAAUoF,MAChD,CAACA,IAWF,sBAAKpJ,GAAG,OAAR,UACE,cAAC,GAAD,CACEyG,YAAa,kBAnGS,0CAmGHA,IACnB6B,kBAAmB,SAAC/C,GAAD,OAAWgE,EAAehE,IAC7CG,SAAU,SAACK,GAAD,OA9ChB,SAAuBA,GACrB,IAAI6D,EAAS,GACb,OAAQ7D,GACN,IAAK,MACH6D,EAAS,YAAIR,GAAWS,MAAK,SAACL,EAAGM,GAAJ,OAAUN,EAAExJ,GAAG+J,cAAcD,EAAE9J,OAC5D,MACF,IAAK,MACH4J,EAAS,YAAIR,GAAWS,MAAK,SAACL,EAAGM,GAAJ,OAAUA,EAAE9J,GAAG+J,cAAcP,EAAExJ,OAC5D,MACF,IAAK,UACH4J,EAAS,YAAIR,GAAWS,MACtB,SAACL,EAAGM,GAAJ,OAAUN,EAAEG,eAAiBG,EAAEH,kBAEjC,MACF,IAAK,YACHC,EAAS,YAAIR,GAAWS,MACtB,SAACL,EAAGM,GAAJ,OAAUA,EAAEH,eAAiBH,EAAEG,kBAEjC,MACF,QACE,OAAO,KAEXN,EAAaO,GAwBiBI,CAAcjE,MAEzCqD,EAAUlF,KAAI,SAAC+F,GAAD,OACb,cAAC/H,EAAD,CAEElC,GAAIiK,EAAMjK,GACVqC,UACG4H,EAAMjK,GACJC,UAAU,EAAGgK,EAAMjK,GAAGE,YAAY,MAClCgK,oBACAC,SAASb,EAAYY,qBAE1B/H,gBAAiB8H,EAAM9H,gBACvBlB,YAAa,kBAlCrB,SAAqBgJ,GACnBZ,GAAa,SAACD,GAAD,OAAeA,EAAUgB,QAAO,SAACC,GAAD,OAAOA,EAAErK,KAAOiK,EAAMjK,SAiC1CiB,CAAYgJ,IAC/B7H,qBAAsB,SAACgB,GAAD,OArE9B,SAAoB6G,EAAO7G,GACzB,IAAIkH,EAAO,YAAOlB,GACZmB,EAAaD,EAAQE,WAAU,SAACC,GACpC,OAAOA,EAAIzK,KAAOiK,EAAMjK,MAE1BsK,EAAQC,GAAYZ,eAAiBvG,EACrCiG,EAAaiB,GA+D4BI,CAAWT,EAAO7G,KAVhD6G,EAAMjK,UC9GrB2K,IAASC,OAAO,cAAC3B,GAAD,IAAS4B,SAASC,eAAe,U","file":"static/js/main.3c372901.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Leapfrog.00b4adbd.ogg\";","import audioURL from \"../media/Leapfrog.ogg\";\nimport Swal from \"sweetalert2\";\n\nexport function getIdName(id) {\n  return id.substring(0, id.lastIndexOf(\" \"));\n}\n\nexport function playAudio(id) {\n  Swal.close();\n  let audio = new Audio(audioURL);\n  audio.loop = true;\n  audio.play();\n  Swal.fire({ title: `${getIdName(id)}'s off`, icon: \"warning\" }).then(() => {\n    audio.loop = false;\n    audio.pause();\n  });\n}\n\n/**\n * @param {Date} input - current value of TimePicker Component\n * @param {boolean} onlySeconds - if true, parseTime return time in seconds\n * @returns {Date|number}\n */\nexport function parseTime(input, onlySeconds) {\n  if (!input || input === null) return getMidNight();\n  let time = new Date();\n  let durationSeconds =\n    input.getHours() * 60 ** 2 + input.getMinutes() * 60 + input.getSeconds();\n  if (onlySeconds) return durationSeconds;\n  // if the timer is set to 00:00:00\n  if (!durationSeconds) return null;\n  time.setSeconds(time.getSeconds() + durationSeconds);\n  return time;\n}\n\nfunction getMidNight() {\n  // workaround to get 00:00:00 at timer's creation\n  const time = new Date();\n  time.setHours(0, 0, 0, 0);\n  return time;\n}\n\nexport function getInputStorage(id) {\n  let inputStorage = localStorage.getItem(`input ${id}`);\n  if (inputStorage === \"null\" || !inputStorage) {\n    return getMidNight();\n  }\n  return new Date(JSON.parse(inputStorage.toString()));\n}\n","import { IconButton } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { getIdName } from \"../utils\";\n\nexport default function TitleBar(props) {\n  const { id, removeTimer } = props;\n  return (\n    <div className=\"title-bar\">\n      <h2>{getIdName(id)}</h2>\n      <IconButton\n        // style={{ color: \"white\" }}\n        aria-label=\"delete\"\n        color=\"default\"\n        onClick={() => {\n          localStorage.removeItem(`input ${id}`);\n          removeTimer();\n        }}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </div>\n  );\n}\n","import { IconButton } from \"@material-ui/core\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport ReplayIcon from \"@material-ui/icons/Replay\";\nimport * as utils from \"../utils\";\n\nexport default function TimeButtons(props) {\n  const { pause, resume, restart, isRunning, clockValues, input } = props;\n  return (\n    <div className=\"buttons\">\n      <IconButton\n        // style={{ color: \"white\" }}\n        onClick={() => {\n          if (!isRunning()) {\n            if (!clockValues().every((e) => Boolean(e))) {\n              let time = utils.parseTime(input());\n              if (!time) return;\n              restart(time);\n            } else {\n              resume();\n            }\n          } else {\n            pause();\n          }\n        }}\n      >\n        {!isRunning() ? <PlayArrowIcon /> : <PauseIcon />}\n      </IconButton>\n      <IconButton\n        // style={{ color: \"white\" }}\n        onClick={() => {\n          let time = utils.parseTime(input());\n          restart(time);\n          pause();\n        }}\n      >\n        <ReplayIcon />\n      </IconButton>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useTimer } from \"react-timer-hook\";\nimport { TextField } from \"@material-ui/core\";\nimport AdapterDateFns from \"@material-ui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@material-ui/lab/LocalizationProvider\";\nimport TimePicker from \"@material-ui/lab/TimePicker\";\nimport TitleBar from \"./TitleBar\";\nimport TimeButtons from \"./TimeButtons\";\nimport * as utils from \"../utils\";\nimport \"../../index.css\";\n\nexport default function FullTimer(props) {\n  let { expiryTimestamp, updateTimeoutSeconds, removeTimer, id, isHidden } =\n    props;\n\n  const { seconds, minutes, hours, isRunning, pause, resume, restart } =\n    useTimer({\n      autoStart: false,\n      expiryTimestamp,\n      onExpire: () => {\n        let time = utils.parseTime(input);\n        restart(time);\n        pause();\n        utils.playAudio(id);\n      },\n    });\n\n  const clockValues = [hours, minutes, seconds];\n\n  const [input, setInput] = useState(utils.getInputStorage(id));\n\n  useEffect(() => {\n    localStorage.setItem(`input ${id}`, JSON.stringify(input));\n    updateTimeoutSeconds(utils.parseTime(input, true));\n    let time = utils.parseTime(input);\n    restart(time);\n    pause();\n    // eslint-disable-next-line\n  }, [input]);\n\n  if (isHidden) return <></>;\n\n  function TimerBody() {\n    return (\n      <div className=\"clock buttons\">\n        <div className=\"actual-timer\">\n          {clockValues.map((item, index) => (\n            <>\n              <div>{item < 10 ? `0${item}` : item}</div>\n              {index === clockValues.length - 1 ? \"\" : \":\"}\n            </>\n          ))}\n        </div>\n        <TimeButtons\n          pause={() => pause()}\n          resume={() => resume()}\n          restart={(time) => restart(time)}\n          isRunning={() => isRunning}\n          clockValues={() => clockValues}\n          input={() => input}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <section className=\"wrapper\">\n      <TitleBar id={id} removeTimer={removeTimer} />\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <TimePicker\n          ampm={false}\n          ampmInClock={false}\n          views={[\"hours\", \"minutes\", \"seconds\"]}\n          inputFormat=\"HH:mm:ss\"\n          mask=\"__:__:__\"\n          label=\"INSERT TIME HERE\"\n          value={input}\n          onChange={(newValue) => {\n            setInput(newValue);\n          }}\n          renderInput={(params) => (\n            <TextField\n              // style={{ color: \"white\" }}\n              onKeyDown={(event) => {\n                if (event.key === \"Enter\") {\n                  let time = utils.parseTime(input);\n                  restart(time);\n                }\n              }}\n              {...params}\n            />\n          )}\n        />\n      </LocalizationProvider>\n      <TimerBody />\n      <hr />\n    </section>\n  );\n}\n","import { useState } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { MenuItem } from \"@material-ui/core\";\nimport SortIcon from \"@material-ui/icons/Sort\";\nimport { IconButton } from \"@material-ui/core\";\n\nfunction SortButton(props) {\n  const { sortList } = props;\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (sortMethod) => {\n    setAnchorEl(null);\n    if (typeof sortMethod !== \"object\") sortList(sortMethod);\n  };\n\n  return (\n    <>\n      <IconButton onClick={handleClick}>\n        <SortIcon\n          style={{\n            color: \"white\",\n            cursor: \"pointer\",\n            paddingRight: \".3em\",\n          }}\n        />\n      </IconButton>\n      <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          \"aria-labelledby\": \"basic-button\",\n        }}\n      >\n        <MenuItem onClick={() => handleClose(\"A-Z\")}>A-Z</MenuItem>\n        <MenuItem onClick={() => handleClose(\"Z-A\")}>Z-A</MenuItem>\n        <MenuItem onClick={() => handleClose(\"time-up\")}>\n          Time (ascending)\n        </MenuItem>\n        <MenuItem onClick={() => handleClose(\"time-down\")}>\n          Time (descendig)\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n\nexport default SortButton;\n","import { IconButton } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nexport default function AddTimerBtn(props) {\n  const { createTimer } = props;\n  return (\n    <>\n      <IconButton\n        onClick={() => {\n          createTimer();\n        }}\n      >\n        <AddIcon style={{ color: \"white\" }} />\n      </IconButton>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { styled, alpha } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport SortButton from \"./SortButton\";\nimport AddTimerBtn from \"./AddTimerBtn\";\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.0),\n  marginLeft: 0,\n  width: \"100%\",\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  paddingRight: theme.spacing(1),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  width: \"100%\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n  },\n}));\n\nexport default function SearchBar(props) {\n  const { createTimer, changeInputFilter, sortList } = props;\n  const [inputFilter, setinputFilter] = useState(\"\");\n\n  useEffect(() => {\n    changeInputFilter(inputFilter);\n    // eslint-disable-next-line\n  }, [inputFilter]);\n\n  return (\n    <Box sx={{ flexGrow: 1, width: \"100%\" }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <SortButton\n            sortList={(sortMethod) => {\n              sortList(sortMethod);\n            }}\n          />\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              onChange={(event) => setinputFilter(event.target.value)}\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n              onKeyDown={(event) => {\n                if (event.key === \"Escape\") {\n                  event.target.value = \"\";\n                  setinputFilter(\"\");\n                }\n              }}\n            />\n          </Search>\n          <AddTimerBtn createTimer={createTimer} />\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n","// import FullTimer from \"./components/FullTimer\";\n// import NavBar from \"./components/NavBar\";\nimport FullTimer from \"./components/SingleTimer/FullTimer\";\nimport Searchbar from \"./components/SearchBar/SearchBar\";\nimport React, { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport \"./index.css\";\n\nexport default function App() {\n  // ************************************************************************ //\n\n  // ********************* //\n  // *** STATES *** //\n  // ********************* //\n\n  // ************************************************************************ //\n\n  const [timerList, setTimerList] = useState(getStorage());\n  const [InputFilter, setInputFilter] = useState(\"\");\n\n  // ************************************************************************ //\n\n  // *********************   //\n  // *** STATES MODIFIER *** //\n  // *********************   //\n\n  // ************************************************************************ //\n\n  function getStorage() {\n    let timerStorage = localStorage.getItem(\"timerList\");\n    if (!timerStorage || timerStorage === []) return [];\n    return JSON.parse(timerStorage.toString());\n  }\n\n  async function createTimer() {\n    await Swal.fire({\n      title: \"Enter timer's name\",\n      input: \"text\",\n      inputValidator: (value) => {\n        if (!value) return \"You need to write something!\";\n      },\n    }).then((result) => {\n      if (!result.value) return;\n      setTimerList((timerList) => [\n        ...timerList,\n        {\n          timeoutSeconds: 0,\n          id: `${result.value} ${timerList.length}`,\n          expiryTimestamp: 0,\n        },\n      ]);\n    });\n  }\n\n  function timeChange(timer, seconds) {\n    let newList = [...timerList];\n    const timerIndex = newList.findIndex((obj) => {\n      return obj.id === timer.id;\n    });\n    newList[timerIndex].timeoutSeconds = seconds;\n    setTimerList(newList);\n  }\n\n  function sortTimerList(sortMethod) {\n    let sorted = \"\";\n    switch (sortMethod) {\n      case \"A-Z\":\n        sorted = [...timerList].sort((a, b) => a.id.localeCompare(b.id));\n        break;\n      case \"Z-A\":\n        sorted = [...timerList].sort((a, b) => b.id.localeCompare(a.id));\n        break;\n      case \"time-up\":\n        sorted = [...timerList].sort(\n          (a, b) => a.timeoutSeconds - b.timeoutSeconds\n        );\n        break;\n      case \"time-down\":\n        sorted = [...timerList].sort(\n          (a, b) => b.timeoutSeconds - a.timeoutSeconds\n        );\n        break;\n      default:\n        return null;\n    }\n    setTimerList(sorted);\n  }\n\n  function removeTimer(timer) {\n    setTimerList((timerList) => timerList.filter((t) => t.id !== timer.id));\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"timerList\", JSON.stringify(timerList));\n  }, [timerList]);\n\n  // ************************************************************************ //\n\n  // ********************* //\n  // *** HTML STRUCTURE *** //\n  // ********************* //\n\n  // ************************************************************************ //\n\n  return (\n    <div id=\"main\">\n      <Searchbar\n        createTimer={() => createTimer()}\n        changeInputFilter={(event) => setInputFilter(event)}\n        sortList={(sortMethod) => sortTimerList(sortMethod)}\n      />\n      {timerList.map((timer) => (\n        <FullTimer\n          key={timer.id}\n          id={timer.id}\n          isHidden={\n            !timer.id\n              .substring(0, timer.id.lastIndexOf(\" \"))\n              .toLocaleLowerCase() // id without index\n              .includes(InputFilter.toLocaleLowerCase())\n          }\n          expiryTimestamp={timer.expiryTimestamp}\n          removeTimer={() => removeTimer(timer)}\n          updateTimeoutSeconds={(seconds) => timeChange(timer, seconds)}\n        />\n      ))}\n    </div>\n  );\n}\n","import reactDom from \"react-dom\";\nimport App from \"./App\";\n\nreactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}