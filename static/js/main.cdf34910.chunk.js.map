{"version":3,"sources":["media/Leapfrog.ogg","components/FullTimer.js","components/SortButton.js","components/NavBar.js","App.js","index.js"],"names":["FullTimer","expiryTimestamp","updateTimeoutSeconds","removeTimer","id","isHidden","IdName","substring","lastIndexOf","parseTime","input","onlySeconds","getMidNight","time","Date","durationSeconds","getHours","getMinutes","getSeconds","setSeconds","setHours","useTimer","autoStart","onExpire","Swal","close","audio","Audio","audioURL","loop","play","fire","title","icon","then","pause","playAudio","seconds","minutes","hours","isRunning","resume","restart","clockValues","useState","inputStorage","localStorage","getItem","JSON","parse","toString","getInputStorage","setInput","useEffect","setItem","stringify","TitleBar","className","IconButton","color","onClick","removeItem","RealTimer","map","item","index","length","LocalizationProvider","dateAdapter","AdapterDateFns","TimePicker","ampm","ampmInClock","views","inputFormat","mask","label","value","onChange","newValue","renderInput","params","TextField","onKeyDown","event","key","SortButton","sortList","anchorEl","setAnchorEl","open","Boolean","handleClose","sortMethod","currentTarget","style","cursor","paddingRight","Menu","onClose","MenuListProps","MenuItem","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","SearchIconWrapper","spacing","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","padding","paddingLeft","transition","transitions","create","PrimarySearchAppBar","createTimer","changeInputFilter","inputFilter","setinputFilter","Box","sx","flexGrow","AppBar","Toolbar","target","placeholder","inputProps","App","timerStorage","getStorage","timerList","setTimerList","InputFilter","setInputFilter","a","inputValidator","result","timeoutSeconds","sorted","sort","b","localeCompare","sortTimerList","timer","toLocaleLowerCase","includes","filter","t","newList","timerIndex","findIndex","obj","timeChange","reactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdf34910.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Leapfrog.00b4adbd.ogg\";","import React, { useState, useEffect } from \"react\";\nimport { useTimer } from \"react-timer-hook\";\nimport Swal from \"sweetalert2\";\nimport { TextField } from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport ReplayIcon from \"@material-ui/icons/Replay\";\nimport AdapterDateFns from \"@material-ui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@material-ui/lab/LocalizationProvider\";\nimport TimePicker from \"@material-ui/lab/TimePicker\";\nimport audioURL from \"./../media/Leapfrog.ogg\";\n\nimport \"../index.css\";\n\nexport default function FullTimer({\n  expiryTimestamp,\n  updateTimeoutSeconds,\n  removeTimer,\n  id,\n  isHidden,\n}) {\n  const IdName = id.substring(0, id.lastIndexOf(\" \"));\n\n  function playAudio() {\n    Swal.close();\n    let audio = new Audio(audioURL);\n    audio.loop = true;\n    audio.play();\n    Swal.fire({ title: `${IdName}'s off`, icon: \"warning\" }).then(() => {\n      audio.loop = false;\n      audio.pause();\n    });\n  }\n\n  /**\n   * @param {Date} input - current value of TimePicker Component\n   * @param {boolean} onlySeconds - if true, parseTime return time in seconds\n   * @returns {Date|number}\n   */\n  function parseTime(input, onlySeconds) {\n    if (!input || input === null) return getMidNight();\n    let time = new Date();\n    let durationSeconds =\n      input.getHours() * 60 ** 2 + input.getMinutes() * 60 + input.getSeconds();\n    if (onlySeconds) return durationSeconds;\n    // if the timer is set to 00:00:00\n    if (!durationSeconds) return null;\n    time.setSeconds(time.getSeconds() + durationSeconds);\n    expiryTimestamp = time;\n    return time;\n  }\n\n  function getMidNight() {\n    // workaround to get 00:00:00 at timer's creation\n    const time = new Date();\n    time.setHours(0, 0, 0, 0);\n    return time;\n  }\n\n  function getInputStorage() {\n    let inputStorage = localStorage.getItem(`input ${id}`);\n    if (inputStorage === \"null\" || !inputStorage) {\n      return getMidNight();\n    }\n    return new Date(JSON.parse(inputStorage.toString()));\n  }\n\n  const { seconds, minutes, hours, isRunning, pause, resume, restart } =\n    useTimer({\n      autoStart: false,\n      expiryTimestamp,\n      onExpire: () => {\n        playAudio();\n      },\n    });\n\n  const clockValues = [hours, minutes, seconds];\n\n  const [input, setInput] = useState(getInputStorage());\n\n  useEffect(() => {\n    localStorage.setItem(`input ${id}`, JSON.stringify(input));\n    updateTimeoutSeconds(parseTime(input, true));\n    let time = parseTime(input);\n    restart(time);\n    pause();\n    // eslint-disable-next-line\n  }, [input]);\n\n  if (isHidden) return <></>;\n\n  const TitleBar = () => {\n    return (\n      <div className=\"title-bar\">\n        <h2>{IdName}</h2>\n        <IconButton\n          // style={{ color: \"white\" }}\n          aria-label=\"delete\"\n          color=\"default\"\n          onClick={() => {\n            localStorage.removeItem(`input ${id}`);\n            removeTimer();\n          }}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </div>\n    );\n  };\n\n  const RealTimer = () => {\n    return (\n      <div className=\"clock buttons\">\n        <div className=\"clock\">\n          <div className=\"actual-timer\">\n            {clockValues.map((item, index) => (\n              <>\n                <div>{item < 10 ? `0${item}` : item}</div>\n                {index === clockValues.length - 1 ? \"\" : \":\"}\n              </>\n            ))}\n          </div>\n        </div>\n        <div className=\"buttons\">\n          <IconButton\n            // style={{ color: \"white\" }}\n            onClick={() => {\n              if (!isRunning) {\n                if (!(hours || minutes || seconds)) {\n                  let time = parseTime(input);\n                  if (!time) return;\n                  restart(time);\n                } else {\n                  resume();\n                }\n              } else {\n                pause();\n              }\n            }}\n          >\n            {!isRunning ? <PlayArrowIcon /> : <PauseIcon />}\n          </IconButton>\n          <IconButton\n            // style={{ color: \"white\" }}\n            onClick={() => {\n              let time = parseTime(input);\n              restart(time);\n              pause();\n            }}\n          >\n            <ReplayIcon />\n          </IconButton>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <section className=\"wrapper\">\n      <TitleBar />\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <TimePicker\n          ampm={false}\n          ampmInClock={false}\n          views={[\"hours\", \"minutes\", \"seconds\"]}\n          inputFormat=\"HH:mm:ss\"\n          mask=\"__:__:__\"\n          label=\"INSERT TIME HERE\"\n          value={input}\n          onChange={(newValue) => {\n            setInput(newValue);\n          }}\n          renderInput={(params) => (\n            <TextField\n              // style={{ color: \"white\" }}\n              onKeyDown={(event) => {\n                if (event.key === \"Enter\") {\n                  let time = parseTime(input);\n                  restart(time);\n                }\n              }}\n              {...params}\n            />\n          )}\n        />\n      </LocalizationProvider>\n      <RealTimer />\n      <hr />\n    </section>\n  );\n}\n","import { useState } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { MenuItem } from \"@material-ui/core\";\nimport SortIcon from \"@material-ui/icons/Sort\";\nimport { IconButton } from \"@material-ui/core\";\n\nconst SortButton = ({ sortList }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (sortMethod) => {\n    setAnchorEl(null);\n    if (typeof sortMethod !== \"object\") sortList(sortMethod);\n  };\n\n  return (\n    <>\n      <IconButton onClick={handleClick}>\n        <SortIcon\n          style={{\n            color: \"white\",\n            cursor: \"pointer\",\n            paddingRight: \".3em\",\n          }}\n        />\n      </IconButton>\n      <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          \"aria-labelledby\": \"basic-button\",\n        }}\n      >\n        <MenuItem onClick={() => handleClose(\"A-Z\")}>A-Z</MenuItem>\n        <MenuItem onClick={() => handleClose(\"Z-A\")}>Z-A</MenuItem>\n        <MenuItem onClick={() => handleClose(\"time-up\")}>\n          Time (ascending)\n        </MenuItem>\n        <MenuItem onClick={() => handleClose(\"time-down\")}>\n          Time (descendig)\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default SortButton;\n","import React, { useState, useEffect } from \"react\";\nimport { styled, alpha } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { IconButton } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SortButton from \"./SortButton\";\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.0),\n  marginLeft: 0,\n  width: \"100%\",\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  paddingRight: theme.spacing(1),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  width: \"100%\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n  },\n}));\n\nexport default function PrimarySearchAppBar({\n  createTimer,\n  changeInputFilter,\n  sortList,\n}) {\n  const [inputFilter, setinputFilter] = useState(\"\");\n\n  useEffect(() => {\n    changeInputFilter(inputFilter);\n    // eslint-disable-next-line\n  }, [inputFilter]);\n\n  return (\n    <Box sx={{ flexGrow: 1, width: \"100%\" }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <SortButton\n            sortList={(sortMethod) => {\n              sortList(sortMethod);\n            }}\n          />\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              onChange={(event) => setinputFilter(event.target.value)}\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n              onKeyDown={(event) => {\n                if (event.key === \"Escape\") {\n                  event.target.value = \"\";\n                  setinputFilter(\"\");\n                }\n              }}\n            />\n          </Search>\n          <Box sx={{ flexGrow: 1 }} />\n          <div>\n            <IconButton\n              onClick={() => {\n                createTimer();\n              }}\n            >\n              <AddIcon style={{ color: \"white\" }} />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n","// import FullTimer from \"./components/FullTimer\";\n// import NavBar from \"./components/NavBar\";\nimport FullTimer from \"./components/FullTimer\";\nimport NavBar from \"./components/NavBar\";\nimport React, { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport \"./index.css\";\n\nexport default function App() {\n  // ************************************************************************ //\n\n  // ********************* //\n  // *** STATES *** //\n  // ********************* //\n\n  // ************************************************************************ //\n\n  const [timerList, setTimerList] = useState(getStorage());\n  const [InputFilter, setInputFilter] = useState(\"\");\n\n  // ************************************************************************ //\n\n  // *********************   //\n  // *** STATES MODIFIER *** //\n  // *********************   //\n\n  // ************************************************************************ //\n\n  function getStorage() {\n    let timerStorage = localStorage.getItem(\"timerList\");\n    if (!timerStorage || timerStorage === []) return [];\n    return JSON.parse(timerStorage.toString());\n  }\n\n  async function createTimer() {\n    await Swal.fire({\n      title: \"Enter timer's name\",\n      input: \"text\",\n      inputValidator: (value) => {\n        if (!value) return \"You need to write something!\";\n      },\n    }).then((result) => {\n      if (!result.value) return;\n      const time = new Date();\n      time.setSeconds(time.getSeconds() + 0);\n      setTimerList((timerList) => [\n        ...timerList,\n        {\n          timeoutSeconds: 0,\n          id: `${result.value} ${timerList.length}`,\n          expiryTimestamp: time,\n        },\n      ]);\n    });\n  }\n\n  function timeChange(timer, seconds) {\n    let newList = [...timerList];\n    const timerIndex = newList.findIndex((obj) => {\n      return obj.id === timer.id;\n    });\n    newList[timerIndex].timeoutSeconds = seconds;\n    setTimerList(newList);\n  }\n\n  function sortTimerList(sortMethod) {\n    let sorted = \"\";\n    switch (sortMethod) {\n      case \"A-Z\":\n        sorted = [...timerList].sort((a, b) => a.id.localeCompare(b.id));\n        break;\n      case \"Z-A\":\n        sorted = [...timerList].sort((a, b) => b.id.localeCompare(a.id));\n        break;\n      case \"time-up\":\n        sorted = [...timerList].sort(\n          (a, b) => a.timeoutSeconds - b.timeoutSeconds\n        );\n        break;\n      case \"time-down\":\n        sorted = [...timerList].sort(\n          (a, b) => b.timeoutSeconds - a.timeoutSeconds\n        );\n        break;\n      default:\n        return null;\n    }\n    setTimerList(sorted);\n  }\n\n  function removeTimer(timer) {\n    setTimerList((timerList) => timerList.filter((t) => t.id !== timer.id));\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"timerList\", JSON.stringify(timerList));\n  }, [timerList]);\n\n  // ************************************************************************ //\n\n  // ********************* //\n  // *** HTML STRUCTURE *** //\n  // ********************* //\n\n  // ************************************************************************ //\n\n  return (\n    <div id=\"main\">\n      <NavBar\n        createTimer={() => createTimer()}\n        changeInputFilter={(event) => setInputFilter(event)}\n        sortList={(sortMethod) => sortTimerList(sortMethod)}\n      />\n      {timerList.map((timer) => (\n        <FullTimer\n          key={timer.id}\n          id={timer.id}\n          isHidden={\n            !timer.id\n              .substring(0, timer.id.lastIndexOf(\" \"))\n              .toLocaleLowerCase() // id without index\n              .includes(InputFilter.toLocaleLowerCase())\n          }\n          expiryTimestamp={timer.expiryTimestamp}\n          removeTimer={() => removeTimer(timer)}\n          updateTimeoutSeconds={(seconds) => timeChange(timer, seconds)}\n        />\n      ))}\n    </div>\n  );\n}\n","import reactDom from \"react-dom\";\nimport App from \"./App\";\n\nreactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}